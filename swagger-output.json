{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "AGENT STATS",
    "description": "AGENT STATS STATUSES AND CHANNEL DATA"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    },
    {
      "name": "AMI",
      "description": "AMI apis to get current active stats"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "any description..."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user/signIn": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to sign in a specific user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/user/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get a specific user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully.",
            "schema": {
              "$ref": "#/definitions/Authorized"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ami/summary": {
      "get": {
        "tags": [
          "AMI"
        ],
        "description": "queue summary",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "status of queues.",
            "schema": {
              "$ref": "#/definitions/Summary"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/summary/{name}": {
      "get": {
        "tags": [
          "AMI"
        ],
        "description": "status of queues.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "status of queues.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/status/{name}": {
      "get": {
        "tags": [
          "AMI"
        ],
        "description": "status of queues.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "status of queues.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/logout-agent": {
      "post": {
        "tags": [
          "AMI"
        ],
        "description": "logs out agent.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentLogOut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/pause/": {
      "post": {
        "tags": [
          "AMI"
        ],
        "description": "status of queues.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pause"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/un-pause/": {
      "post": {
        "tags": [
          "AMI"
        ],
        "description": "status of queues.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnPause"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/un-pause-memeber/": {
      "post": {
        "tags": [
          "AMI"
        ],
        "description": "status of queues.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnPauseMemeber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/pause-memeber/": {
      "post": {
        "tags": [
          "AMI"
        ],
        "description": "status of queues.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PauseMemeber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/call-originate/": {
      "post": {
        "tags": [
          "AMI"
        ],
        "description": "status of queues.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Originate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/call-barge/": {
      "post": {
        "tags": [
          "AMI"
        ],
        "description": "status of queues.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Barge"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/call-spy/": {
      "post": {
        "tags": [
          "AMI"
        ],
        "description": "status of queues.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Spy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/status": {
      "get": {
        "tags": [
          "AMI"
        ],
        "description": "status of queues.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "status of queues.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/channels/{name}": {
      "get": {
        "tags": [
          "AMI"
        ],
        "description": "all current channels running on machine.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Channel"
            },
            "description": "all current channels running on machine."
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/channels": {
      "get": {
        "tags": [
          "AMI"
        ],
        "description": "all current channels running on machine.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Channel"
            },
            "description": "all current channels running on machine."
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/sip-peers": {
      "get": {
        "tags": [
          "AMI"
        ],
        "description": "all sip peers.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "all sip peers.",
            "schema": {
              "$ref": "#/definitions/SipPeers"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/cel-events": {
      "get": {
        "tags": [
          "AMI"
        ],
        "description": "all sip peers.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "all sip peers.",
            "schema": {
              "$ref": "#/definitions/SipPeers"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/cdr-events": {
      "get": {
        "tags": [
          "AMI"
        ],
        "description": "all sip peers.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "all sip peers.",
            "schema": {
              "$ref": "#/definitions/SipPeers"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/bridge": {
      "post": {
        "tags": [
          "AMI"
        ],
        "description": "all sip peers.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "all sip peers.",
            "schema": {
              "$ref": "#/definitions/SipPeers"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/ami/redirect": {
      "post": {
        "tags": [
          "AMI"
        ],
        "description": "all sip peers.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "all sip peers.",
            "schema": {
              "$ref": "#/definitions/SipPeers"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/job/": {
      "post": {
        "tags": [
          "Job"
        ],
        "description": "create new out dial jobs.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Job"
        ],
        "description": "all sip peers.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "all sip peers.",
            "schema": {
              "$ref": "#/definitions/SipPeers"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/job/{id}": {
      "put": {
        "tags": [
          "Job"
        ],
        "description": "update outbound job by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateJob"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Job"
        ],
        "description": "all sip peers.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "all sip peers.",
            "schema": {
              "$ref": "#/definitions/SipPeers"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Job"
        ],
        "description": "all sip peers.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "all sip peers.",
            "schema": {
              "$ref": "#/definitions/SipPeers"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/job/types": {
      "get": {
        "tags": [
          "Job"
        ],
        "description": "all sip peers.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "all sip peers.",
            "schema": {
              "$ref": "#/definitions/SipPeers"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Parents": {
      "type": "object",
      "properties": {
        "father": {
          "type": "string",
          "example": "Simon Doe"
        },
        "mother": {
          "type": "string",
          "example": "Marie Doe"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "parents": {
          "$ref": "#/definitions/Parents"
        },
        "diplomas": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "school": {
                "type": "string",
                "example": "XYZ University"
              },
              "year": {
                "type": "number",
                "example": 2020
              },
              "completed": {
                "type": "boolean",
                "example": true
              },
              "internship": {
                "type": "object",
                "properties": {
                  "hours": {
                    "type": "number",
                    "example": 290
                  },
                  "location": {
                    "type": "string",
                    "example": "XYZ Company"
                  }
                }
              }
            }
          }
        }
      }
    },
    "CreateJob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "test"
        },
        "type": {
          "type": "string",
          "example": "predictive"
        },
        "pause": {
          "type": "number",
          "example": 0
        },
        "complete": {
          "type": "number",
          "example": 0
        },
        "startTime": {
          "type": "string",
          "example": "2022-08-10 20:00:00"
        },
        "endTime": {
          "type": "string",
          "example": "2022-08-10 23:00:00"
        },
        "jobData": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "example": "231203"
              },
              "mask": {
                "type": "string",
                "example": "123456"
              },
              "context": {
                "type": "string",
                "example": "default"
              },
              "trunk": {
                "type": "string",
                "example": "outgoing"
              }
            }
          }
        }
      }
    },
    "UpdateJob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "test"
        },
        "type": {
          "type": "string",
          "example": "predictive"
        },
        "pause": {
          "type": "number",
          "example": 0
        },
        "complete": {
          "type": "number",
          "example": 0
        },
        "startTime": {
          "type": "string",
          "example": "2022-08-10 20:00:00"
        },
        "endTime": {
          "type": "string",
          "example": "2022-08-10 23:00:00"
        },
        "jobData": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "example": "231203"
              },
              "mask": {
                "type": "string",
                "example": "123456"
              },
              "context": {
                "type": "string",
                "example": "default"
              },
              "trunk": {
                "type": "string",
                "example": "outgoing"
              }
            }
          }
        }
      }
    },
    "Summary": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string",
                    "example": "QueueSummary"
                  },
                  "queue": {
                    "type": "string",
                    "example": "sales"
                  },
                  "loggedin": {
                    "type": "string",
                    "example": "0"
                  },
                  "available": {
                    "type": "string",
                    "example": "0"
                  },
                  "callers": {
                    "type": "string",
                    "example": "0"
                  },
                  "holdtime": {
                    "type": "string",
                    "example": "0"
                  },
                  "talktime": {
                    "type": "string",
                    "example": "0"
                  },
                  "longestholdtime": {
                    "type": "string",
                    "example": "0"
                  },
                  "actionid": {
                    "type": "string",
                    "example": "1660287273579"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string",
                    "example": "QueueMember"
                  },
                  "queue": {
                    "type": "string",
                    "example": "sales"
                  },
                  "name": {
                    "type": "string",
                    "example": "SIP/salman"
                  },
                  "location": {
                    "type": "string",
                    "example": "SIP/salman"
                  },
                  "stateinterface": {
                    "type": "string",
                    "example": "SIP/salman"
                  },
                  "membership": {
                    "type": "string",
                    "example": "dynamic"
                  },
                  "penalty": {
                    "type": "string",
                    "example": "0"
                  },
                  "callstaken": {
                    "type": "string",
                    "example": "0"
                  },
                  "lastcall": {
                    "type": "string",
                    "example": "0"
                  },
                  "lastpause": {
                    "type": "string",
                    "example": "0"
                  },
                  "incall": {
                    "type": "string",
                    "example": "0"
                  },
                  "status": {
                    "type": "string",
                    "example": "5"
                  },
                  "paused": {
                    "type": "string",
                    "example": "0"
                  },
                  "pausedreason": {
                    "type": "string",
                    "example": ""
                  },
                  "wrapuptime": {
                    "type": "string",
                    "example": "0"
                  },
                  "actionid": {
                    "type": "string",
                    "example": "1660286739498"
                  }
                }
              }
            }
          }
        }
      }
    },
    "SipPeers": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string",
                    "example": "PeerEntry"
                  },
                  "actionid": {
                    "type": "string",
                    "example": "1660286907216"
                  },
                  "channeltype": {
                    "type": "string",
                    "example": "SIP"
                  },
                  "objectname": {
                    "type": "string",
                    "example": "salman"
                  },
                  "chanobjecttype": {
                    "type": "string",
                    "example": "peer"
                  },
                  "ipaddress": {
                    "type": "string",
                    "example": "-none-"
                  },
                  "ipport": {
                    "type": "string",
                    "example": "0"
                  },
                  "dynamic": {
                    "type": "string",
                    "example": "yes"
                  },
                  "autoforcerport": {
                    "type": "string",
                    "example": "no"
                  },
                  "forcerport": {
                    "type": "string",
                    "example": "no"
                  },
                  "autocomedia": {
                    "type": "string",
                    "example": "no"
                  },
                  "comedia": {
                    "type": "string",
                    "example": "no"
                  },
                  "videosupport": {
                    "type": "string",
                    "example": "no"
                  },
                  "textsupport": {
                    "type": "string",
                    "example": "no"
                  },
                  "acl": {
                    "type": "string",
                    "example": "no"
                  },
                  "status": {
                    "type": "string",
                    "example": "UNKNOWN"
                  },
                  "realtimedevice": {
                    "type": "string",
                    "example": "no"
                  },
                  "description": {
                    "type": "string",
                    "example": ""
                  },
                  "accountcode": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "Pause": {
      "type": "object",
      "properties": {
        "queues": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "queue": {
                "type": "string",
                "example": "tenent1"
              },
              "reason": {
                "type": "string",
                "example": "some reason"
              }
            }
          }
        }
      }
    },
    "UnPause": {
      "type": "object",
      "properties": {
        "queues": {
          "type": "array",
          "example": [
            "tenent1",
            "tenent2"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PauseMemeber": {
      "type": "object",
      "properties": {
        "queue": {
          "type": "string",
          "example": "tenent1"
        },
        "interface": {
          "type": "string",
          "example": "PJSIP/3000"
        },
        "reason": {
          "type": "string",
          "example": "some reason"
        }
      }
    },
    "UnPauseMemeber": {
      "type": "object",
      "properties": {
        "queue": {
          "type": "string",
          "example": "tenent1"
        },
        "interface": {
          "type": "string",
          "example": "PJSIP/3000"
        }
      }
    },
    "Originate": {
      "type": "object",
      "properties": {
        "trunk": {
          "type": "string",
          "example": "name of trunk"
        },
        "number": {
          "type": "string",
          "example": "777968656"
        },
        "context": {
          "type": "string",
          "example": "dafault"
        },
        "mask": {
          "type": "string",
          "example": "9898989"
        },
        "exten": {
          "type": "string",
          "example": "88856472"
        }
      }
    },
    "AgentLogOut": {
      "type": "object",
      "properties": {
        "interface": {
          "type": "string",
          "example": "pjsip/1001"
        }
      }
    },
    "Spy": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "string",
          "example": "only channel prfix like 6002 for PJSIP/6002-00000001 "
        },
        "number": {
          "type": "string",
          "example": "777968656"
        },
        "context": {
          "type": "string",
          "example": "dafault"
        },
        "mask": {
          "type": "string",
          "example": "9898989"
        },
        "exten": {
          "type": "string",
          "example": "88856472"
        }
      }
    },
    "Barge": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "string",
          "example": "only channel prfix like 6002 for PJSIP/6002-00000001 "
        },
        "number": {
          "type": "string",
          "example": "777968656"
        },
        "context": {
          "type": "string",
          "example": "dafault"
        },
        "mask": {
          "type": "string",
          "example": "9898989"
        },
        "exten": {
          "type": "string",
          "example": "88856472"
        }
      }
    },
    "Channel": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "example": true
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string",
                    "example": "CoreShowChannel"
                  },
                  "actionid": {
                    "type": "string",
                    "example": "1660287123427"
                  },
                  "channel": {
                    "type": "string",
                    "example": "SIP/server-00006a17"
                  },
                  "channelstate": {
                    "type": "string",
                    "example": "6"
                  },
                  "channelstatedesc": {
                    "type": "string",
                    "example": "Up"
                  },
                  "calleridnum": {
                    "type": "string",
                    "example": "3478349033"
                  },
                  "calleridname": {
                    "type": "string",
                    "example": "<unknown>"
                  },
                  "connectedlinenum": {
                    "type": "string",
                    "example": "<unknown>"
                  },
                  "connectedlinename": {
                    "type": "string",
                    "example": "<unknown>"
                  },
                  "language": {
                    "type": "string",
                    "example": "en"
                  },
                  "accountcode": {
                    "type": "string",
                    "example": ""
                  },
                  "context": {
                    "type": "string",
                    "example": "OFFER_SERVICE"
                  },
                  "exten": {
                    "type": "string",
                    "example": "s"
                  },
                  "priority": {
                    "type": "string",
                    "example": "9"
                  },
                  "uniqueid": {
                    "type": "string",
                    "example": "1660287120.27621"
                  },
                  "linkedid": {
                    "type": "string",
                    "example": "1660287120.27621"
                  },
                  "application": {
                    "type": "string",
                    "example": "BackGround"
                  },
                  "applicationdata": {
                    "type": "string",
                    "example": "/home/AUDIO/non_subscribers"
                  },
                  "duration": {
                    "type": "string",
                    "example": "00:00:03"
                  },
                  "bridgeid": {
                    "type": "string",
                    "example": ""
                  }
                }
              }
            }
          }
        }
      }
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "BEN@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "XYZ"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "Authorized": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Successfully found"
        }
      }
    }
  }
}